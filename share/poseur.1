.\" Man page generated from reStructuredText.
.
.TH POSEUR 1 "October 24, 2019" "v0.3.1" ""
.SH NAME
poseur \- back-port compiler for Python 3.8 positional-only parameter syntax
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
poseur [\fIoptions\fP] <\fIpython source files and folders\fP> ...
.SH DESCRIPTION
.sp
Since PEP 570, Python introduced \fIpositional\-only parameters\fP syntax in
version __3.8__. For those who wish to use \fIpositional\-only parameters\fP in
their codes, \fIposeur\fP provides an intelligent, yet imperfect, solution of
a \fBbackport compiler\fP by removing \fIpositional\-only parameters\fP syntax
whilst introduce a \fIdecorator\fP for runtime checks, which guarantees you to
always write \fIpositional\-only parameters\fP in Python 3.8 flavour then compile
for compatibility later.
.SH OPTIONS
.SS positional arguments
.INDENT 0.0
.TP
.B SOURCE
python source files and folders to be converted
.UNINDENT
.SS optional arguments
.INDENT 0.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B \-V\fP,\fB  \-\-version
show program\(aqs version number and exit
.TP
.B \-q\fP,\fB  \-\-quiet
run in quiet mode
.UNINDENT
.SS archive options
.sp
duplicate original files in case there\(aqs any issue
.INDENT 0.0
.TP
.BI \-n\fB a\fP,\fB \ \-\-no\-archive
do not archive original files
.UNINDENT
.INDENT 0.0
.TP
.B \-p \fIPATH\fP, \-\-archive\-path \fIPATH\fP
path to archive original files
.UNINDENT
.SS convert options
.sp
compatibility configuration for none\-unicode files
.INDENT 0.0
.TP
.B \-c \fICODING\fP, \-\-encoding \fICODING\fP
encoding to open source files
.TP
.B \-v \fIVERSION\fP, \-\-python \fIVERSION\fP
convert against Python version
.TP
.B \-s \fISEP\fP, \-\-linesep \fISEP\fP
line separator to process source files
.UNINDENT
.INDENT 0.0
.TP
.B \-d\fP,\fB  \-\-dismiss
dismiss runtime checks for positional\-only parameters
.TP
.BI \-n\fB l\fP,\fB \ \-\-no\-linting
do not lint converted codes
.UNINDENT
.INDENT 0.0
.TP
.B \-r \fIVAR\fP, \-\-decorator \fIVAR\fP
name of decorator for runtime checks (${DECORATOR})
.UNINDENT
.SH ENVIRONMENT
.sp
\fBposeur\fP currently supports two environment variables.
.INDENT 0.0
.TP
.B POSEUR_QUIET
run in quiet mode
.TP
.B POSEUR_ENCODING
encoding to open source files
.TP
.B POSEUR_VERSION
convert against Python version
.TP
.B POSEUR_LINESEP
line separator to process source files
.TP
.B POSEUR_DISMISS
dismiss runtime checks for positional\-only arguments
.TP
.B POSEUR_LINTING
lint converted codes
.TP
.B POSEUR_DECORATOR
name of decorator for runtime checks
.UNINDENT
.SH SEE ALSO
.sp
babel(1), f2format(1), walrus(1), vermin(1)
.SH AUTHOR
Jarry Shaw, a newbie programmer, is the author, owner and maintainer
of poseur. Please contact me at jarryshaw@icloud.com.
.SH COPYRIGHT
poseur is licensed under the MIT License.
.\" Generated by docutils manpage writer.
.
